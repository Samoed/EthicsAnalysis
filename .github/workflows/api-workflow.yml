# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Api workflow

on:
  push:
    branches: [ "main" ]
    paths:
      - "**.py"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: python:3.10

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements/requirements-test.txt
          python -c "import nltk; nltk.download('punkt'); nltk.data.load('tokenizers/punkt/russian.pickle')"
      - name: Lint files
        continue-on-error: true
        run: |
          cd api && make
      - name: Test with pytest
        run: |
          pytest --cov=app api/
        env:
          TEST_REAL_PAGE: False
          POSTGRES_DB: test
          POSTGRES_HOST: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
