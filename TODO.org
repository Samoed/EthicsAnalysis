#+title:Esganalysis

* Fixes
** TODO update parser state last
** TODO check if model id exists in =text/sentences=
** TODO change fastapi logger ([[https://medium.com/1mgofficial/how-to-override-uvicorn-logger-in-fastapi-using-loguru-124133cdcd4e][link]])
** TODO browser only for one bank
** TODO Run tox command before startup (for parsers)
- [[https://tox.wiki/en/3.26.0/example/general.html][commands]]
** TODO tesing parser ([[https://docs.pytest.org/en/latest/how-to/fixtures.html#safe-fixture-structure][link]])
** TODO add pytest command for parsers [[https://docs.pytest.org/en/7.1.x/example/simple.html#control-skipping-of-tests-according-to-command-line-option][link]]
** TODO integration test in different folder [[https://docs.pytest.org/en/7.1.x/reference/customize.html?highlight=pytest%20ini][link]]
** TODO add readme for subprojects
** DONE Setup tox
CLOSED: [2022-10-02 Вс 21:01]
* Plans
** Must
*** TODO [[https://github.com/zhanymkanov/fastapi-best-practices#11-sqlalchemy-set-db-keys-naming-convention][Sqlalchemy naming convention]]
*** TODO Nginx reverse proxy [[https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-1/][(link)]]
- [[https://serverfault.com/questions/152745/nginx-proxy-by-request-method][on method]]
*** TODO different workers for read and write (cqrs)
*** TODO compress request data with nginx?
*** TODO nginx reverse proxy (load balancer(?)) maybe there
https://youtu.be/RfN0B7L4SuM?list=PLEwK9wdS5g0riA4Q_fqcjkv0zYf6HgRGJ
*** TODO Отдельный воркер для обработки отызвов в предложения
*** TODO Change docker compose variables for env_file
- [[https://grafana.com/docs/grafana/latest/administration/provisioning/#using-environment-variables][env variables in grafana]]
*** TODO Citation for libraries
** Maybe
*** TODO Fast api dependencies ([[https://fastapi.tiangolo.com/tutorial/dependencies/][link]])
*** TODO compress large sentences with gzip header (maybe with nginx)
*** TODO Caching requests
* Examples
** Как мы попробовали DDD, CQRS и Event Sourcing и какие выводы сделали ([[https://habr.com/ru/post/313110/][link]])
** CQRS ([[https://www.cosmicpython.com/book/chapter_12_cqrs.html][link]])
** Code examples
- https://github.com/Rustem/toptal-blog-celery-toy-ex
- https://github.com/arshadansari27/simple-analytics-engine/tree/cqrs
- https://github.com/iamsarthakjoshi/python-celery-rabbitmq
- https://github.com/szwang/celery-example
- https://github.com/rabbitmq/rabbitmq-tutorials/tree/main/python
- https://github.com/GregaVrbancic/fastapi-celery
- https://medium.com/@rijinswaminathan/use-celery-and-rabbitmq-with-django-rest-api-d803681d8c86
- https://medium.com/cuddle-ai/async-architecture-with-fastapi-celery-and-rabbitmq-c7d029030377
- https://github.com/tiangolo/full-stack-fastapi-postgresql
- https://github.com/tiangolo/full-stack-fastapi-couchbase
* Libs
** Json
- https://github.com/ultrajson/ultrajson
- https://github.com/ijl/orjson
